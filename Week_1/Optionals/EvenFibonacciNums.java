package Week_1.Optionals;

public class EvenFibonacciNums {
    public static void main(String[] args) {
        //  Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
        //  By starting with 1 and 2, the first 10 terms will be:
        // 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
        // By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
        // find the sum of the even-valued terms.
        
        System.out.println(fibOnlyEven(500));



    }

    // Time compelxity O(n) & Space compelxity O()
    // n is the max value
    public static int fibOnlyEven(int n) {
        if (n <= 0)
            return 0;

        int fib[] = new int[n + 1];
        fib[0] = 0; fib[1] = 1;

        int sum = 0;
        for (int i = 2; i < n; i++) {
            fib[i] = fib[i - 1] + fib[i - 2];
            if (sum >= 4000000)
                return sum;
            if (fib[i] % 2 == 0)
                sum += fib[i];
            System.out.println("Fib " + fib[i] + ", sum " + sum);

        }

        return sum;
        
    }


    // public static int fibOnlyEven(int n, int sum) {
    //     if (n <= 0)
    //         return 0;

    //     int sum = fibOnlyEven(n-1) + fibOnlyEven(n-2);


    
    //     return sum + ;
        
    // }


    
}
